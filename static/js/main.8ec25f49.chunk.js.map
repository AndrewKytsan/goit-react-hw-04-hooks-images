{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.scss","components/Button/Button.module.scss","components/Modal/Modal.module.scss","App.module.scss","components/ImageGallery/ImageGallery.module.scss","components/Searchbar/Searchbar.module.scss","ApiService/imagesApi.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchImages","searchQuery","page","a","then","response","data","hits","result","Searchbar","onSubmit","useState","inputValue","setInputValue","className","s","SearchForm","e","preventDefault","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","value","onChange","target","autoComplete","autoFocus","placeholder","ImageGalleryItem","smallImg","largeImg","ImageGalleryItemImage","src","alt","onClick","proptype","PropTypes","string","isRequired","func","ImageGallery","images","map","image","webformatURL","largeImageURL","id","Button","ButtonWrapper","Modal","largeImage","onClose","useEffect","window","addEventListener","closeModal","removeEventListener","code","Overlay","nodeName","App","setSearchQuery","setPage","results","setResults","loading","setLoading","modalImage","setModalImage","imagesApi","length","Error","prev","scrollTo","top","document","documentElement","scrollHeight","behavior","console","log","imagesRequest","reset","query","Loader","color","height","width","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ec25f49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2rhK9\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__33ZmC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonWrapper\":\"Button_ButtonWrapper__uC-3p\",\"Button\":\"Button_Button__3eF1g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__oZMXr\",\"Modal\":\"Modal_Modal__1OQui\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3Dolz\",\"Loader\":\"App_Loader__3bnwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1uRUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__17dnR\",\"SearchForm\":\"Searchbar_SearchForm__2jXKS\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2_aYh\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3Y7Q8\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1vagH\"};","import axios from 'axios';\r\nconst API_KEY = '23486768-997b33f9cb0e02e3e0af30e3b';\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\n\r\nconst fetchImages = async (searchQuery, page) => {\r\n    return await axios(\r\n        `/?key=${API_KEY}&q=${searchQuery}&image_type=photo&orientation=horizontal&page=${page}&per_page=12`,\r\n    ).then(response => response.data.hits);\r\n};\r\n\r\nconst result = { fetchImages };\r\n\r\nexport default result;\r\n","import s from './Searchbar.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nexport default function Searchbar({ onSubmit }) {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const inputHandler = e => {\r\n        setInputValue(e.target.value);\r\n    };\r\n    const formHandler = e => {\r\n        e.preventDefault();\r\n        onSubmit(inputValue);\r\n        setInputValue('');\r\n    };\r\n\r\n    return (\r\n        <header className={s.Searchbar}>\r\n            <form className={s.SearchForm} onSubmit={formHandler}>\r\n                <button type=\"submit\" className={s.SearchFormButton}>\r\n                    <span className={s.SearchFormButtonLabel}>Search</span>\r\n                </button>\r\n\r\n                <input\r\n                    className={s.SearchFormInput}\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={inputHandler}\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                />\r\n            </form>\r\n        </header>\r\n    );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import s from './ImageGalleryItem.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ImageGalleryItem({ smallImg, largeImg }) {\r\n    return (\r\n        <li className={s.ImageGalleryItem}>\r\n            <img\r\n                className={s.ImageGalleryItemImage}\r\n                src={smallImg}\r\n                alt=\"\"\r\n                onClick={largeImg}\r\n            />\r\n        </li>\r\n    );\r\n}\r\n\r\nImageGalleryItem.proptype = {\r\n    smallImg: PropTypes.string.isRequired,\r\n    largeImg: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport s from './ImageGallery.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nfunction ImageGallery({ images, onClick }) {\r\n    return (\r\n        <ul className={s.ImageGallery}>\r\n            {images.map(image => (\r\n                <ImageGalleryItem\r\n                    key={image.id}\r\n                    smallImg={image.webformatURL}\r\n                    largeImg={() => onClick(image.largeImageURL)}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            webformatURL: PropTypes.string.isRequired,\r\n            largeImageURL: PropTypes.string.isRequired,\r\n        }),\r\n    ).isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import s from './Button.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ onClick }) {\r\n    return (\r\n        <div className={s.ButtonWrapper}>\r\n            <button className={s.Button} type=\"button\" onClick={onClick}>\r\n                Load More\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","import s from './Modal.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nexport default function Modal({ largeImage, onClose }) {\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', closeModal);\r\n        return () => {\r\n            window.removeEventListener('keydown', closeModal);\r\n        };\r\n    });\r\n\r\n    const closeModal = e => {\r\n        if (e.code === 'Escape') {\r\n            onClose();\r\n        }\r\n    };\r\n    const clickOverlay = e => {\r\n        if (e.target.nodeName !== 'IMG') {\r\n            onClose();\r\n        }\r\n    };\r\n    return (\r\n        <div className={s.Overlay} onClick={clickOverlay}>\r\n            <div className={s.Modal}>\r\n                <img src={largeImage} alt=\"\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nModal.propTypes = {\r\n    largeImage: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n","import imagesApi from './ApiService/imagesApi';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport Loader from 'react-loader-spinner';\nimport s from './App.module.scss';\nimport { useEffect, useState } from 'react';\n\nexport default function App() {\n    const [searchQuery, setSearchQuery] = useState('');\n    const [page, setPage] = useState(1);\n    const [results, setResults] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [modalImage, setModalImage] = useState(null);\n\n    useEffect(() => {\n        if (!searchQuery) {\n            return;\n        }\n        async function imagesRequest() {\n            setLoading(true);\n            try {\n                const images = await imagesApi.fetchImages(searchQuery, page);\n                if (!images.length) {\n                    throw new Error();\n                }\n                setResults(prev => [...prev, ...images]);\n                setLoading(false);\n                page > 1 &&\n                    window.scrollTo({\n                        top: document.documentElement.scrollHeight,\n                        behavior: 'smooth',\n                    });\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        imagesRequest();\n    }, [searchQuery, page]);\n\n    const searchbarHandler = query => {\n        if (searchQuery === query) {\n            return;\n        }\n        reset();\n        setSearchQuery(query);\n    };\n\n    const reset = () => {\n        setSearchQuery('');\n        setPage(1);\n        setResults([]);\n        setLoading(false);\n    };\n\n    const loadMoreBtn = () => {\n        setPage(prevPage => prevPage + 1);\n    };\n\n    const openModal = largeImage => {\n        setModalImage(largeImage);\n    };\n\n    const closeModal = () => {\n        setModalImage(null);\n    };\n\n    return (\n        <div className={s.App}>\n            <Searchbar onSubmit={searchbarHandler} />;\n            <ImageGallery images={results} onClick={openModal} />\n            {modalImage && (\n                <Modal largeImage={modalImage} onClose={closeModal} />\n            )}\n            {loading && (\n                <div className={s.Loader}>\n                    <Loader\n                        type=\"Puff\"\n                        color=\"#00BFFF\"\n                        height={80}\n                        width={80}\n                    />\n                </div>\n            )}\n            {results.length > 0 && <Button onClick={loadMoreBtn} />}\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}